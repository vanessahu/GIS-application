# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# Identify Bluespot Fill Up Values.py
# Created on: 2015-12-06 23:12:26.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: Identify Bluespot Fill Up Values <Output_Workspace> <DEM> <Vertical_accuracy__meters_> <Buildings> 
# Description: 
# This model derives bluespots from a DEM and compares them to the locations of buildings. Bluespots are natural landscape depressions vulnerable to flooding during extreme rainfall events. The model analyzes the amount of water that is needed to fill each blue spot, thus making it possible to assign relative degrees of flood risk.
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Script arguments
Output_Workspace = arcpy.GetParameterAsText(0)
if Output_Workspace == '#' or not Output_Workspace:
    Output_Workspace = "C:\\Application\\Xien_1113\\Cloudburst\\Cloudburst\\Outputs_BluespotsFillUp.gdb" # provide a default value if unspecified

DEM = arcpy.GetParameterAsText(1)
if DEM == '#' or not DEM:
    DEM = "C:\\Application\\Xien_1113\\Cloudburst\\Cloudburst\\Inputs.gdb\\DEM" # provide a default value if unspecified

Vertical_accuracy__meters_ = arcpy.GetParameterAsText(2)
if Vertical_accuracy__meters_ == '#' or not Vertical_accuracy__meters_:
    Vertical_accuracy__meters_ = "0.05" # provide a default value if unspecified

Buildings = arcpy.GetParameterAsText(3)
if Buildings == '#' or not Buildings:
    Buildings = "C:\\Application\\Xien_1113\\Cloudburst\\Cloudburst\\Inputs.gdb\\Buildings" # provide a default value if unspecified

# Local variables:
Buildings_Raster = "%Output Workspace%\\BldgRaster"
Building_Polygons = "%Output Workspace%\\BldgPoly"
Buildings_Layer = "Buildings Layer"
Buildings_X_Bluespots_Layer = Buildings_Layer
Bluespots_X_Buildings_Layer = Buildings_Layer
All_Sinks_Filled = "%Output Workspace%\\AllSinksFilled"
Small_Sinks_Filled = "%Output Workspace%\\SmallSinksFilled"
Bluespot_Depths_Cell_by_Cell = "%Output Workspace%\\BSDepths"
v1 = "1"
Preliminary_Bluespots = "%Output Workspace%\\PreliminaryBS"
Bluespots_Excluding_Buildings = "%Output Workspace%\\BSNoBuildings"
Bluespot_Regions = "%Output Workspace%\\BSRegions"
Bluespots___Volume_Field = Bluespot_Regions
Join_Unfilled_Depths = Bluespots___Volume_Field
Sum_Unfilled_Depths = "%Output Workspace%\\UnfilledDepth"
Join_Filled_Depths = Join_Unfilled_Depths
Sum_Filled_Depths = "%Output Workspace%\\FilledDepth"
Bluespot_Volumes = Join_Filled_Depths
CellSize = "1.6"
Joined_Watershed_Areas = Bluespot_Volumes
Flow_Direction_Raster = "%Output Workspace%\\FlowDirection"
Watersheds = "%Output Workspace%\\Watersheds"
Watersheds___Attribute_Table = Watersheds
Watersheds___Area_Field = Watersheds___Attribute_Table
Watershed_Areas = Watersheds___Area_Field
Bluespots___Fill_Up_Field = Joined_Watershed_Areas
Bluespot_Fill_Up_Values = Bluespots___Fill_Up_Field
Bluespots = Bluespot_Fill_Up_Values
Bluespot_Polygons = "%Output Workspace%\\BSPoly"
Bluespot_Polygons_with_IDs = "%Output Workspace%\\BSPolyDissolved"
Bluespots_Layer = "Bluespots Layer"
Buildings_Touching_Bluespots = "%Output Workspace%\\BuildingsTouchBS"
Optional_raster = ""
Bluespots_Touching_Buildings = "%Output Workspace%\\BSTouchBuildings"

# Set Geoprocessing environments
arcpy.env.outputCoordinateSystem = ""
arcpy.env.snapRaster = DEM
arcpy.env.extent = DEM
arcpy.env.cellSize = "1.6"
arcpy.env.geographicTransformations = ""
arcpy.env.mask = ""

# Process: Polygon to Raster
arcpy.PolygonToRaster_conversion(Buildings, "OBJECTID", Buildings_Raster, "CELL_CENTER", "NONE", "34")

# Process: Raster to Polygon
arcpy.RasterToPolygon_conversion(Buildings_Raster, Building_Polygons, "NO_SIMPLIFY", "VALUE")

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(Building_Polygons, Buildings_Layer, "", "", "Shape Shape VISIBLE NONE;OBJECTID OBJECTID VISIBLE NONE;Shape_Length Shape_Length VISIBLE NONE;Shape_Area Shape_Area VISIBLE NONE;ID ID VISIBLE NONE;GRIDCODE GRIDCODE VISIBLE NONE")

# Process: Fill (2)
arcpy.gp.Fill_sa(DEM, All_Sinks_Filled, "")

# Process: Fill
arcpy.gp.Fill_sa(DEM, Small_Sinks_Filled, Vertical_accuracy__meters_)

# Process: Minus
arcpy.gp.Minus_sa(All_Sinks_Filled, Small_Sinks_Filled, Bluespot_Depths_Cell_by_Cell)

# Process: Con
arcpy.gp.Con_sa(Bluespot_Depths_Cell_by_Cell, v1, Preliminary_Bluespots, "", "Value > 0")

# Process: Raster Calculator
arcpy.gp.RasterCalculator_sa("Con(IsNull(\"%Buildings Raster%\"),\"%Preliminary Bluespots%\")", Bluespots_Excluding_Buildings)

# Process: Region Group
arcpy.gp.RegionGroup_sa(Bluespots_Excluding_Buildings, Bluespot_Regions, "EIGHT", "WITHIN", "ADD_LINK", "")

# Process: Add Field
arcpy.AddField_management(Bluespot_Regions, "Volume", "FLOAT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Zonal Statistics as Table
arcpy.gp.ZonalStatisticsAsTable_sa(Bluespot_Regions, "VALUE", Small_Sinks_Filled, Sum_Unfilled_Depths, "DATA", "SUM")

# Process: Join Field
arcpy.JoinField_management(Bluespots___Volume_Field, "Value", Sum_Unfilled_Depths, "Value", "SUM")

# Process: Zonal Statistics as Table (2)
arcpy.gp.ZonalStatisticsAsTable_sa(Bluespot_Regions, "VALUE", All_Sinks_Filled, Sum_Filled_Depths, "DATA", "SUM")

# Process: Join Field (2)
arcpy.JoinField_management(Join_Unfilled_Depths, "Value", Sum_Filled_Depths, "Value", "SUM")

# Process: Get Raster Properties
arcpy.GetRasterProperties_management(Bluespot_Regions, "CELLSIZEX", "")

# Process: Calculate Field
arcpy.CalculateField_management(Join_Filled_Depths, "Volume", "%CellSize% * %CellSize% * (!SUM_1! - !SUM!)", "PYTHON_9.3", "")

# Process: Flow Direction
arcpy.gp.FlowDirection_sa(Small_Sinks_Filled, Flow_Direction_Raster, "NORMAL", Optional_raster)

# Process: Watershed
arcpy.gp.Watershed_sa(Flow_Direction_Raster, Bluespot_Regions, Watersheds, "VALUE")

# Process: Build Raster Attribute Table
arcpy.BuildRasterAttributeTable_management(Watersheds, "NONE")

# Process: Add Field (2)
arcpy.AddField_management(Watersheds___Attribute_Table, "WatershedArea", "FLOAT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field (2)
arcpy.CalculateField_management(Watersheds___Area_Field, "WatershedArea", "%CellSize% * %CellSize% * !Count!", "PYTHON_9.3", "")

# Process: Join Field (3)
arcpy.JoinField_management(Bluespot_Volumes, "Value", Watershed_Areas, "Value", "WatershedArea")

# Process: Add Field (3)
arcpy.AddField_management(Joined_Watershed_Areas, "FillUp", "FLOAT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Calculate Field (3)
arcpy.CalculateField_management(Bluespots___Fill_Up_Field, "FillUp", "!Volume! * 1000 / !WatershedArea!", "PYTHON_9.3", "")

# Process: Raster to Polygon (2)
arcpy.RasterToPolygon_conversion(Bluespot_Fill_Up_Values, Bluespot_Polygons, "NO_SIMPLIFY", "VALUE")

# Process: Dissolve
arcpy.Dissolve_management(Bluespot_Polygons, Bluespot_Polygons_with_IDs, "gridcode", "", "MULTI_PART", "DISSOLVE_LINES")

# Process: Join Field (4)
arcpy.JoinField_management(Bluespot_Polygons_with_IDs, "gridcode", Bluespot_Fill_Up_Values, "Value", "Volume;FillUp")

# Process: Make Feature Layer (2)
arcpy.MakeFeatureLayer_management(Bluespots, Bluespots_Layer, "", "", "gridcode gridcode VISIBLE NONE;Volume Volume VISIBLE NONE;FillUp FillUp VISIBLE NONE")

# Process: Select Layer By Location
arcpy.SelectLayerByLocation_management(Buildings_Layer, "INTERSECT", Bluespots_Layer, "", "NEW_SELECTION", "NOT_INVERT")

# Process: Copy Features
arcpy.CopyFeatures_management(Buildings_X_Bluespots_Layer, Buildings_Touching_Bluespots, "", "0", "0", "0")

# Process: Select Layer By Location (2)
arcpy.SelectLayerByLocation_management(Bluespots_Layer, "INTERSECT", Buildings_Layer, "", "NEW_SELECTION", "NOT_INVERT")

# Process: Copy Features (2)
arcpy.CopyFeatures_management(Bluespots_X_Buildings_Layer, Bluespots_Touching_Buildings, "", "0", "0", "0")

